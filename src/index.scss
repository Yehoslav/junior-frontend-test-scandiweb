@use './fonts' as F;

:root {
  --primary: #5ece7b;
  --black: #1d1f22;
  --white: #ffffff;
}

* {
  box-sizing: border-box;
}

*:focus {
  outline-color: var(--primary);
}

body {
  margin: 0;
  font-family: F.$regular;
  font-size: 18px;
  text-align: left;
}

.t {
  &__left {
    text-align: left;
  }

  &__center {
    text-align: center;
  }

  &__right{
    text-align: right;
  }

  &__upper {
    text-transform: uppercase;
  }
  
  &__cap {
    text-transform: capitalize;
  }
}

$font-sizes: (18, 32, 30, 24, 16, 14, 42);

@each $size in $font-sizes {
    .f-#{$size} {
      font-size: #{$size}px;
    }
}

.f {
  &p {
    font-family: F.$regular;

    &-eb {
      font-family: F.$extrabold;
    }

    &-b {
      font-family: F.$bold;
    }

    &-sb {
      font-family: F.$semibold;
    }

    &-m {
      font-family: F.$medium;
    }

    &-l {
      font-family: F.$light;
    }

    &-el {
      font-family: F.$extralight;
    }

    &-t {
      font-family: F.$thin;
    }
  }

  &s {
    font-family: Roboto;

    &-c {
      font-family: Roboto\ Condensed;
    }
  }


}

$spaceamounts: (0, 1, 5, 10, 16, 20, 25, 30, 35, 40, 45, 50, 80, 100);
$sides: (
  "": "all",
  "t": "top",
  "b": "bottom",
  "l": "left",
  "r": "right",
);

@each $space in $spaceamounts {
  @each $prefix, $value in $sides {
    $property: if($prefix == '', '', -#{$value});
    .m#{$prefix}#{$space} {
      margin#{$property}: #{$space}px;
    }
    .p#{$prefix}#{$space} {
      padding#{$property}: #{$space}px;
    }
  }
}

.row {
  display: flex;
  flex-direction: row;
  // height: fit-content;

  &-g12 {
    @extend .row;
    gap: 12px;
  }

  &-g8 {
    @extend .row;
    gap: 8px;
  }

  &-g8 {
    @extend .row;
    gap: 8px;
  }

  &-g4 {
    @extend .row;
    gap: 4px;
  }
}

.col {
  display: flex;
  flex-direction: column;

  &-g24 {
    @extend .col;
    gap: 24px;
  }

  &-g12 {
    @extend .col;
    gap: 12px;
  }

  &-g8 {
    @extend .col;
    gap: 8px;
  }

  &-g4 {
    @extend .col;
    gap: 4px;
  }
}

.row.sb,
.col.sb {
  justify-content: space-between;
}

.row, .col {
  &.wrap {
    flex-wrap: wrap;
  }
}

.loading::after {
  display: block;
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  transform: translateX(-100%);
  background: -webkit-gradient(
    linear,
    left top,
    right top,
    from(transparent),
    color-stop(rgba(255, 255, 255, 0.2)),
    to(transparent)
  );

  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );

  /* Adding animation */
  animation: loading 0.8s infinite;
}

/* Loading Animation */
@keyframes loading {
  100% {
    transform: translateX(100%);
  }
}
